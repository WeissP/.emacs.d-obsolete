;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(sql-server-history sql-database-history sql-user-history LaTeX-environment-history TeX-command-history nox-command-history minibuffer-history-search-history read-expression-history junk-hist input-method-history empty-history dired-shell-command-history counsel-ibuffer-history flycheck-read-checker-history anzu--history Info-search-history regexp-history Man-topic-history command-history coding-system-history org-link--history org-read-date-history counsel-descbinds-history org-tags-history org-refile-history pdf-annot-color-history face-name-history string-rectangle-history counsel-imenu-history bookmark-history counsel-describe-symbol-history ivy-history counsel-git-grep-history swiper-history counsel-M-x-history xref--read-identifier-history shell-command-history query-replace-history magit-revision-history search-ring yes-or-no-p-history file-name-history buffer-name-history minibuffer-history extended-command-history))
(setq sql-server-history '("localhost"))
(setq sql-database-history '("uni"))
(setq sql-user-history '("weiss"))
(setq TeX-command-history '(#("la" 0 2 (ivy-index 0))))
(setq nox-command-history '("~/.emacs.d/nox/mspyls/Microsoft.Python.LanguageServer"))
(setq minibuffer-history-search-history '("ha"))
(setq read-expression-history '("(point)" "(point-max)" "(insert \"as\")" "(rime--should-inline-ascii-p)"))
(setq dired-shell-command-history '("12"))
(setq counsel-ibuffer-history '(#("eaf" 0 3 (ivy-index 1))))
(setq regexp-history '("<textarea" "text" "keymap" "i"))
(setq Man-topic-history '(#("wget" 0 4 (ivy-index 0)) #("sdc" 0 3 (ivy-index 0)) #("curl" 0 4 (ivy-index 0)) #("zip" 0 3 (ivy-index 0)) #("yay" 0 3 (ivy-index 0)) #("pacman" 0 6 (ivy-index 0))))
(setq command-history '((weiss-add-enumerate-to-all-headlines) (weiss-add-enumerate-to-all-headlines) (org-change-tag-in-region 1 750 "enumerate" t) (describe-key '(("t" . [116]))) (describe-key '(("tt" . [116 116]))) (describe-key '(("" . [f12]))) (org-change-tag-in-region 1 143 "enumerate" nil) (describe-key '(("tj" . [116 106]))) (describe-key '((" h" . [32 104]))) (org-edit-latex-update-master) (describe-key '(("u" . [117]))) (tda/rsync "/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/5/") (dired-create-directory "/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/5") (tda/rsync "/run/media/weiss/Seagate_Backup/porn/") (tda/rsync "/home/weiss/Documents/Vorlesungen/Programmierpraktikum/") (tda/rsync "/home/weiss/Documents/Vorlesungen/Programmierpraktikum/Übungen/") (describe-key '(("" . [return]))) (magit-checkout "origin/master") (magit-pull-branch "origin/master" nil) (magit-push-other "master" "origin/master" nil) (magit-pull-branch "origin/master" nil) (magit-checkout "origin/master") (describe-key '(("e" . [101]))) (describe-key '(("" . [f12]))) (describe-key '(("e" . [101]))) (describe-key '(("v" . [118]))) (describe-key '(("r" . [114]))) (describe-key '(("" . [f12]))) (describe-key '((" kr" . [32 107 114]))) (describe-key '((" lr" . [32 108 114]))) (describe-key '((" r" . [32 114]))) (describe-key '(("" . [return]))) (describe-key '(([end] . [end]))) (describe-key '(([home] . [home]))) (tda/rsync "/home/weiss/Documents/Vorlesungen/FSuB/Thema3/") (dired-create-directory "/home/weiss/Documents/Vorlesungen/FSuB/Thema3") (preview-clearout-buffer) (yas-load-snippet-buffer-and-close 'latex-mode nil) (yas-visit-snippet-file) (preview-at-point) (org-latex-preview nil) (org-latex-preview nil) (preview-buffer) (weiss-org-preview-latex-and-image) (describe-key '(("u" . [117]))) (tda/rsync "/run/media/weiss/Seagate_Backup/porn/") (tda/rsync "/run/media/weiss/Seagate_Backup/porn/") (tda/rsync "/run/media/weiss/Seagate_Backup/porn/") (tda/rsync "/home/weiss/Downloads/") (tda/rsync "/run/media/weiss/Seagate_Backup/porn/") (tda/rsync "/run/media/weiss/Seagate_Backup/porn/") (xah-elisp-mode) (tda/rsync "/run/media/weiss/Seagate_Backup/porn/") (describe-key '((" jf" . [32 106 102]))) (describe-key '((" jf" . [32 106 102]))) (describe-key '(("k" . [107]))) (electric-pair-mode 'toggle) (describe-key '(("(" . [40]))) (magic-latex-buffer 'toggle) (magic-latex-buffer 'toggle) (describe-key '(([escape escape] . [escape escape]))) (describe-key '(("" . [f12]))) (magic-latex-buffer 'toggle) (magic-latex-buffer 'toggle) (magic-latex-buffer 'toggle) (yas-load-snippet-buffer-and-close 'org-mode nil) (yas-visit-snippet-file) (describe-key '(("" . [f12]))) (tda/rsync "/home/weiss/Documents/Vorlesungen/MFI-KSS/Übungen/") (describe-key '(("i" . [105]))) (describe-key '(("j" . [106]))) (describe-key '(("" . [return]))) (tda/rsync "/home/weiss/Downloads/rsync-test/") (tda/rsync "/home/weiss/Downloads/rsync-test/") (tda/rsync "/run/media/weiss/Seagate_Backup/") (tda/rsync "/home/weiss/Downloads/rsync-test/") (tda/rsync-delete "/run/media/weiss/Seagate_Backup/") (tda/rsync-delete "/run/media/weiss/Seagate_Backup/") (tda/rsync-delete "/home/weiss/Downloads/rsync-test/") (tda/rsync-delete "/run/media/weiss/Seagate_Backup/") (tda/rsync-delete "/run/media/weiss/Seagate_Backup/") (tda/rsync-delete "/home/weiss/Downloads/rsync-test/") (tda/rsync-delete "/run/media/weiss/Seagate_Backup/") (tda/rsync-delete "/home/weiss/Downloads/rsync-test/") (tda/rsync-delete "/home/weiss/Downloads/") (tda/rsync-delete "/home/weiss/Downloads/rsync-test/") (tda/rsync-delete "/home/weiss/Downloads/rsync-test/") (tda/rsync-delete "/home/weiss/Downloads/rsync-test/") (tda/rsync-delete "/home/weiss/Downloads/rsync-test/") (tda/rsync-delete "/home/weiss/Downloads/rsync-test/") (tda/rsync-delete "/home/weiss/Downloads/rsync-test/") (tda/rsync-delete "/home/weiss/Downloads/rsync-test/") (tda/rsync-delete "/home/weiss/Downloads/rsync-test/") (tda/rsync-delete "/home/weiss/Downloads/rsync-test/") (eval-expression '(point) nil nil 127) (preview-at-point) (preview-at-point) (preview-at-point) (preview-at-point) (preview-at-point)))
(setq coding-system-history '(#("chn" 0 3 (ivy-index 2)) #("utf-8" 0 5 (ivy-index 6)) #("utf" 0 3 (ivy-index 1))))
(setq org-read-date-history '("   " "12:15-12:45    " "13:45-15:15    " "22:00    " "   " "10:00-12:00    " " 09:00-12:00    " "13:30-16:00    " "2020-03-24    " "2020-03-10    " "2020-02-25    " "2020-03-31    " "2020-02-19    " "2020-03-12 09:00    "))
(setq org-tags-history '(#("num" 0 3 (ivy-index 0)) #("noexport" 0 8 (ivy-index 0)) #(":noexport:" 0 10 (ivy-index 0)) #(":Buch:Bookmarks:" 0 16 (ivy-index 0)) #("b" 0 1 (ivy-index 0)) #("bo" 0 2 (ivy-index 0))))
(setq org-refile-history '("emacs einrichten [5/20]" "[[https://btsow.club/tags][btsow]] (Einsammlung.org)" "rime" "GFW (Kenntnisse.org)" "Todo" "Projektmanagement" "GdP" "Rosy" "GdP" "Rosy" "Projektmanagement" "andere (Kenntnisse.org)" "GdP" "Keyboard and Mouse (Kenntnisse.org)" "andere (Kenntnisse.org)" "Projektmanagement"))
(setq face-name-history '("org-noter-notes-exist-face" "pdf-occur-page-face" "org-block" "org-drawer" "org-block" "region" "snails-select-line-face" "snails-candiate-content-face" "snails-select-line-face" #("cur" 0 3 (ivy-index 0)) #("sn" 0 2 (ivy-index 0)) #("snails" 0 6 (ivy-index 0)) "org-link"))
(setq string-rectangle-history '("C-M-" "(" "require '" "_a_: ?q? " "'" "(" ". \"\")" "    " "   " "  " " " "|" "_q_: ?q? " "_q_: ?q? 橋本ありな" "\\\\" "\\" "(setq nreg " "\\\\" " nil t" "  nil t" "paste" "'" " TODO" "TODO " " " "\"" "*" " " "*" "** " " " "("))
(setq bookmark-history '(" WhatsApp" " WhatsApp" " WhatsApp" " WhatsApp" " WhatsApp" " WhatsApp" " Github - Your Stars" " WhatsApp" " Emacs China" " WhatsApp" " WhatsApp" #("old" 0 3 (ivy-index 0)) " WhatsApp" " WhatsApp" " WhatsApp" " 发现 - 新·品葱" " Emacs China" " WhatsApp" " Github - Your Stars" " WhatsApp" "dump.el" " WhatsApp" " snails - GitHub" " snails - GitHub" " Github - Your Stars" " Github - Your Stars" " Github - Your Stars" " Github - Your Stars" " YouTube" " Github - Your Stars" " WhatsApp" " Emacs China" " Emacs China" " Github - Your Stars" " Github - Your Stars" " Github - Your Stars" " Github - Your Stars" " Github - Your Stars" " Github - Your Stars" " Github - Your Stars" " Github - Your Stars" " Github - Your Stars" " Emacs China" " Emacs China" " Emacs application framework (EAF) - GitHub" " Emacs China" " Emacs China" " Github - Your Stars" " Github - Your Stars" " Github - Your Stars" " Emacs China" " Github - Your Stars" " snails - GitHub" " Emacs application framework (EAF) - GitHub" "org-refile-last-stored" "org-capture-last-stored" " Emacs application framework (EAF) - GitHub" "org-refile-last-stored" "org-capture-last-stored" " Emacs application framework (EAF) - GitHub" "org-refile-last-stored" "org-capture-last-stored" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " snails - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " snails - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" "org-refile-last-stored" "org-capture-last-stored" "org-refile-last-stored" "org-capture-last-stored" " Emacs application framework (EAF) - GitHub" " Github - Your Stars" " Github - Your Stars" " Github - Your Stars" " Emacs China" " Emacs China" " 发现 - 新·品葱" " Emacs China" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " snails - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs China" " Emacs application framework (EAF) - GitHub" " Emacs China" " Emacs China" " Emacs China" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Emacs application framework (EAF) - GitHub" " Github - Your Stars" " Emacs China"))
(setq counsel-describe-symbol-history '(#("org-change-t" 0 12 (ivy-index 4)) #("weiss-org-preview-latex-and-image" 0 33 (ivy-index 0)) #("looking-back" 0 12 (ivy-index 0)) #("latex-mode-ho" 0 13 (ivy-index 0)) #("major" 0 5 (ivy-index 0)) #("org-edit-latex-preview-at-point" 0 31 (ivy-index 0)) #("org-edit-latex-mo" 0 17 (ivy-index 0)) #("nox-format" 0 10 (ivy-index 0)) #("count-words " 0 12 (ivy-index 0)) #("point-max" 0 9 (ivy-index 0)) #("lsp java dir" 0 12 (ivy-index 2)) #("cdlatex-math" 0 12 (ivy-index 2)) #("org-support" 0 11 (ivy-index 0)) #("auctex" 0 6 (ivy-index 1)) #("org-babel-load-l" 0 16 (ivy-index 0)) #("weiss-temp-insert-mode" 0 22 (ivy-index 0)) #("reverse" 0 7 (ivy-index 0)) #("save-place-mode" 0 15 (ivy-index 0)) #("just-one-space" 0 14 (ivy-index 0)) #("mode-line-othe" 0 14 (ivy-index 0)) #("ivy occur" 0 9 (ivy-index 1)) #("magit-log-section-c" 0 19 (ivy-index 0)) #("snails defau" 0 12 (ivy-index 0)) #("snails-prefix" 0 13 (ivy-index 0)) #("telega-url-shorten" 0 18 (ivy-index 0)) #("alist" 0 5 (ivy-index 1)) #("test" 0 4 (ivy-index 2)) #("split-string" 0 12 (ivy-index 0)) #("buffer-string" 0 13 (ivy-index 0)) #("replace string" 0 14 (ivy-index 14)) #("re-search-forward" 0 17 (ivy-index 0)) #("1+" 0 2 (ivy-index 0)) #("point-min" 0 9 (ivy-index 0)) #("end-of-buffer" 0 13 (ivy-index 3)) #("xml-parse" 0 9 (ivy-index 3)) #("xml-parse-file" 0 14 (ivy-index 0)) #("assq" 0 4 (ivy-index 0)) #("var" 0 3 (ivy-index 3)) #("dired-filter-by-bandao" 0 22 (ivy-index 0)) #("dired-filter-" 0 13 (ivy-index 1)) #("dired-filter-mode" 0 17 (ivy-index 2)) #("redisplay" 0 9 (ivy-index 0)) #("dired-get" 0 9 (ivy-index 1)) #("dired-get-file" 0 14 (ivy-index 0)) #("buffer-list" 0 11 (ivy-index 0)) #("abbrev mode" 0 11 (ivy-index 3)) #("doom-modeline vers" 0 18 (ivy-index 0)) #("super-save-mo" 0 13 (ivy-index 0)) #("iimage-mode" 0 11 (ivy-index 2)) #("minor" 0 5 (ivy-index 0)) #("outline-mode" 0 12 (ivy-index 3)) #("fill-c" 0 6 (ivy-index 0)) #("kill-buffer" 0 11 (ivy-index 2)) #("switch-to-buffer-" 0 17 (ivy-index 2)) #("switch-to-buffer" 0 16 (ivy-index 2)) #("cursor" 0 6 (ivy-index 0)) #("bookmark-defa" 0 13 (ivy-index 0)) #("mino" 0 4 (ivy-index 0)) #("minor-mode-li" 0 13 (ivy-index 1)) #("nino" 0 4 (ivy-index 0)) #("alis" 0 4 (ivy-index 0)) #("majo" 0 4 (ivy-index 0)) #("xah-elisp" 0 9 (ivy-index 1)) #("wdired-mode" 0 11 (ivy-index 2)) #("maj" 0 3 (ivy-index 0)) #("when" 0 4 (ivy-index 0)) #("deploy" 0 6 (ivy-index 2)) #("org-struct" 0 10 (ivy-index 1)) #("yas-maybe-expand" 0 16 (ivy-index 3)) #("org expand" 0 10 (ivy-index 1)) #("org-babel-expand-src-block" 0 26 (ivy-index 1)) #("string=" 0 7 (ivy-index 2)) #("with-current" 0 12 (ivy-index 2)) #("rime-share" 0 10 (ivy-index 0)) #("eaf-val" 0 7 (ivy-index 0)) #("yasdcv sdcv com" 0 15 (ivy-index 0)) #("yasdcv-sdcv" 0 11 (ivy-index 0)) #("eaf-send-key" 0 12 (ivy-index 2)) #("eaf " 0 4 (ivy-index 0)) #("eaf insert or scroll" 0 20 (ivy-index 0)) #("shell" 0 5 (ivy-index 0)) #("color-outline-def" 0 17 (ivy-index 0)) #("org-tag-" 0 8 (ivy-index 0)) #("winner rem" 0 10 (ivy-index 0)) #("upcase" 0 6 (ivy-index 4)) #("frame" 0 5 (ivy-index 7)) #("tramp completion fun" 0 20 (ivy-index 0)) #("gcs-don" 0 7 (ivy-index 0)) #("org-agenda-time" 0 15 (ivy-index 0)) #("dashboard-org-" 0 14 (ivy-index 0)) #("dashboard star" 0 14 (ivy-index 1)) #("agenda fil" 0 10 (ivy-index 0)) #("org-num-mo" 0 10 (ivy-index 0)) #("url-automat" 0 11 (ivy-index 0)) #("org-src-font" 0 12 (ivy-index 0)) #("emphasis" 0 8 (ivy-index 0)) #("recentf max" 0 11 (ivy-index 0)) #("font-lock" 0 9 (ivy-index 1)) #("font-lock-ke" 0 12 (ivy-index 1)) #("org-babel-expand-sr" 0 19 (ivy-index 0))))
(setq ivy-history '(#("back" 0 4 (ivy-index 0)) #("sc" 0 2 (ivy-index 0)) #("sp" 0 2 (ivy-index 3)) #("alig" 0 4 (ivy-index 0)) #("ltx" 0 3 (ivy-index 1)) #("pro" 0 3 (ivy-index 0)) #("pdf" 0 3 (ivy-index 1)) #("wa" 0 2 (ivy-index 0)) #("book" 0 4 (ivy-index 2)) #("smile" 0 5 (ivy-index 7)) #("ic" 0 2 (ivy-index 0)) #("ica" 0 3 (ivy-index 0)) #("eaf" 0 3 (ivy-index 0)) #("org" 0 3 (ivy-index 0)) #("ini" 0 3 (ivy-index 0)) #("dum" 0 3 (ivy-index 0)) #("root@" 0 5 (ivy-index 0)) #("tele" 0 4 (ivy-index 0)) #("efa" 0 3 (ivy-index 0)) #("/../usr/lib/" 0 12 (ivy-index 8)) #("/sudo:root@localhost:/home/weiss/" 0 33 (ivy-index 3)) #("curr" 0 4 (ivy-index 0)) #("snails" 0 6 (ivy-index 2)) #("avlist.txt" 0 10 (ivy-index 0)) #("das" 0 3 (ivy-index 0)) #("snails-can" 0 10 (ivy-index 0)) #("snai" 0 4 (ivy-index 0)) #("snails-" 0 7 (ivy-index 0)) #("recen" 0 5 (ivy-index 1)) #("limi" 0 4 (ivy-index 0)) #("snail" 0 5 (ivy-index 7)) #("simplescreenrecorder-" 0 21 (ivy-index 5)) #("simp" 0 4 (ivy-index 4)) #("/home/weiss/.emacs.d/config/weiss_web.el" 0 40 (ivy-index 0)) #("/home/weiss/.emacs.d/config/" 0 28 (ivy-index 1)) #("/home/weiss/Documents/Vorlesungen/" 0 34 (ivy-index 0)) #("avli" 0 4 (ivy-index 0)) #("film" 0 4 (ivy-index 0)) #("file-bo" 0 7 (ivy-index 0)) #("/run/media/weiss/Seagate_Backup/porn/" 0 37 (ivy-index 0)) #("/home/weiss/.emacs.d/local-package/dired-video-preview/" 0 55 (ivy-index 2)) #("/home/weiss/.emacs.d/rime/" 0 26 (ivy-index 0)) #("/home/weiss/.config/fcitx/rime/" 0 31 (ivy-index 0)) #("root@weiss-tablet" 0 17 (ivy-index 0)) #("sna" 0 3 (ivy-index 0)) #("/home/weiss/.emacs.d/local-package/snails/" 0 42 (ivy-index 1)) #("limit" 0 5 (ivy-index 0)) #("/home/weiss/.emacs.d/local-package/" 0 35 (ivy-index 0)) #("weiss_sn" 0 8 (ivy-index 0)) #("backend buff" 0 12 (ivy-index 1)) #("xfk" 0 3 (ivy-index 0)) #("sn" 0 2 (ivy-index 2)) #("b" 0 1 (ivy-index 0)) #("fil" 0 3 (ivy-index 0)) #("w" 0 1 (ivy-index 0)) #("/sudo:root@weiss-tablet:/home/weiss/Downloads/" 0 46 (ivy-index 0)) #("/sudo:root@weiss-tablet:/usr/share/rime-data/" 0 45 (ivy-index 0)) #("/sudo:root@weiss-tablet:/usr/share/rime-data/back_up/" 0 53 (ivy-index 0)) #("/home/weiss/.emacs.d/emacs-rime/" 0 32 (ivy-index 0)) #("ba" 0 2 (ivy-index 0)) #("/home/weiss/.goldendict/" 0 24 (ivy-index 10)) #("/run/media/weiss/Seagate_Backup/backup/manjaro-i3wm" 0 51 (ivy-index 0)) #("/home/weiss/.emacs.d/" 0 21 (ivy-index 0)) #("/home/weiss/Downloads/" 0 22 (ivy-index 2)) #("/home/weiss/.config/fcitx/" 0 26 (ivy-index 1)) #("/home/weiss/rime_backup" 0 23 (ivy-index 0)) #("/home/weiss/.stardict/" 0 22 (ivy-index 1)) #("/home/weiss/" 0 12 (ivy-index 0)) #("/home/weiss/.config/.stardict" 0 29 (ivy-index 0)) #("/home/weiss/.config/stardict/dic" 0 32 (ivy-index 1)) #("/home/weiss/.config/stardict/" 0 29 (ivy-index 0)) #("test" 0 4 (ivy-index 0)) #("/home/weiss/.emacs.d/snails/" 0 28 (ivy-index 0)) #("file" 0 4 (ivy-index 0)) #("ken" 0 3 (ivy-index 1)) #("glob" 0 4 (ivy-index 0)) #("log" 0 3 (ivy-index 0)) #("bac" 0 3 (ivy-index 2)) #("log.txt" 0 7 (ivy-index 0)) #("/home/weiss/sh" 0 14 (ivy-index 0)) #("/home/weiss/sah/" 0 16 (ivy-index 0)) #("mes" 0 3 (ivy-index 0)) #("star" 0 4 (ivy-index 1)) #("/home/weiss/Nutstore Files/" 0 27 (ivy-index 0)) #("nu" 0 2 (ivy-index 0)) #("/home/weiss/Python" 0 18 (ivy-index 0)) #("/home/weiss/Documents/" 0 22 (ivy-index 0)) #("nut" 0 3 (ivy-index 0)) #("or" 0 2 (ivy-index 0)) #("py" 0 2 (ivy-index 0)) #("ke" 0 2 (ivy-index 0)) #("tes" 0 3 (ivy-index 0)) #("p" 0 1 (ivy-index 0)) #("key" 0 3 (ivy-index 0)) #("sh" 0 2 (ivy-index 0)) #("xke" 0 3 (ivy-index 1)) #("xin" 0 3 (ivy-index 0)) #("/home/weiss/.config/systemd/user/" 0 33 (ivy-index 0)) #("/sudo:root@weiss-tablet:/etc/systemd/user/" 0 42 (ivy-index 0)) #("root" 0 4 (ivy-index 0))))
(setq counsel-git-grep-history '(#("meow--kbd-forward-slurp" 0 23 (ivy-index 0)) #("meow-undo" 0 9 (ivy-index 1)) #(":load-path" 0 10 (ivy-index 0)) #("latex" 0 5 (ivy-index 34)) #(":bind" 0 5 (ivy-index 0)) #("trigger_focus_event" 0 19 (ivy-index 4)) #("defer " 0 6 (ivy-index 0)) #("open_link" 0 9 (ivy-index 0)) #("copy_text" 0 9 (ivy-index 3)) #("copy_select" 0 11 (ivy-index 1)) #("github " 0 7 (ivy-index 0)) #("request_close_buffer" 0 20 (ivy-index 0)) #("insert_or_close_buffer" 0 22 (ivy-index 2)) #("restore_seek_position" 0 21 (ivy-index 1)) #("view_source" 0 11 (ivy-index 1)) #("head " 0 5 (ivy-index 1)) #("C-v " 0 4 (ivy-index 2)) #("super-save" 0 10 (ivy-index 0)) #("eaf-open " 0 9 (ivy-index 2)) #("eaf-open vid" 0 12 (ivy-index 1)) #("open_link_new_buffer" 0 20 (ivy-index 1)) #("new_buffer" 0 10 (ivy-index 2)) #("open_link_new" 0 13 (ivy-index 3)) #(":hook" 0 5 (ivy-index 3)) #("togglePlay" 0 10 (ivy-index 2)) #("mute" 0 4 (ivy-index 22)) #("add-to-list" 0 11 (ivy-index 1)) #("toggle_fullscreen" 0 17 (ivy-index 1)) #("toggle_play" 0 11 (ivy-index 0)) #("get_focus_text" 0 14 (ivy-index 0)) #("execute_js" 0 10 (ivy-index 0)) #("eval_js" 0 7 (ivy-index 0)) #("fcitx" 0 5 (ivy-index 0)) #("githu" 0 5 (ivy-index 0)) #("fset" 0 4 (ivy-index 2)) #("icon" 0 4 (ivy-index 15)) #("defvar .* 2" 0 11 (ivy-index 0)) #("github" 0 6 (ivy-index 0)) #("xfk-command-flag" 0 16 (ivy-index 2)) #("prog-mode-hook" 0 14 (ivy-index 0)) #("offcloud" 0 8 (ivy-index 0)) #("entsch" 0 6 (ivy-index 0)) #(":frage:" 0 7 (ivy-index 1)) #("if " 0 3 (ivy-index 3)) #("RET" 0 3 (ivy-index 1)) #("line numb" 0 9 (ivy-index 2)) #("misc-info" 0 9 (ivy-index 3)) #("display-line-numbers" 0 20 (ivy-index 2))))
(setq swiper-history '(#("t-key" 0 5 (ivy-index 1)) "outline-next-visible-heading" "outline-next-visible-heading" #("outline-next-visible-heading" 0 28 (ivy-index 2)) #("defun" 0 5 (ivy-index 6)) "org-latex-format-headline-default-function" "org-latex-format-headline-function" "org" "***" #("weiss-latex-buffer-preview" 0 26 (ivy-index 1)) #("org-latex-headline" 0 18 (ivy-index 1)) " " "headline" "org-latex-format-headline-function" "org-latex-format-headline-functionorg-latex-format-headline-function" "org-latex-format-headline-function" #("org-latex-format-headline-function" 0 34 (ivy-index 1)) "\\end{enumerate}" "\\begin{enumerate}" "abp" "abp" "abp" "gleich" #("weiss-re" 0 8 (ivy-index 0)) "(setq mark-active t)" "anzu-query-replace" "ret" "kbd-macro" "meow--kbd-forward-slurp" "n" #("meow--execute-kbd-macro" 0 23 (ivy-index 0)) "meow-quit" #("xah-delete-forward-bracket-pairs" 0 32 (ivy-index 1)) #("if" 0 2 (ivy-index 15)) #("electric-pair-mode" 0 18 (ivy-index 0)) #("pair" 0 4 (ivy-index 0)) "xah-fly-command-mode-activate-hook" #("hook" 0 4 (ivy-index 5)) #("snails-backend-filter-buffer-blacklist" 0 38 (ivy-index 2)) #("docume" 0 6 (ivy-index 6)) "late" "latex" "preview buffer" "org-edit-latex-preview-at-point" #("preview-clearout-at-point" 0 25 (ivy-index 0)) "preview" "latex" "org-edi" ":hook" #("latex_" 0 6 (ivy-index 0)) "temp" #("weiss--" 0 7 (ivy-index 21)) "Enabled" #("fl" 0 2 (ivy-index 0)) "del" "del" #("xah-insert-" 0 11 (ivy-index 1)) #("java" 0 4 (ivy-index 2)) "pdf" ":map" ":map" #("noter" 0 5 (ivy-index 1)) ":load-path" #("ob-" 0 3 (ivy-index 0)) #("#+TITLE:" 0 8 (ivy-index 4)) #("green" 0 5 (ivy-index 0)) #("pdf" 0 3 (ivy-index 0)) "latex" "latex" "latex" "latex" "tex" "tex" "add" ":bind" "nox" #("xah-fly-j-keymap" 0 16 (ivy-index 0)) #("book" 0 4 (ivy-index 0)) "test" #("open_lin" 0 8 (ivy-index 3)) "close_buffer" "weis" #("copy_co" 0 7 (ivy-index 4)) #("begin" 0 5 (ivy-index 5)) #("latex" 0 5 (ivy-index 5)) #("frag" 0 4 (ivy-index 3)) #("auctex" 0 6 (ivy-index 0)) "auctex.el" #("quel" 0 4 (ivy-index 0)) "org-babel" #("dann " 0 5 (ivy-index 1)) #("star" 0 4 (ivy-index 1)) #("gol" 0 3 (ivy-index 0)) #("read-c" 0 6 (ivy-index 0)) #("weiss-org-RET-key" 0 17 (ivy-index 1)) "meow" #("paren" 0 5 (ivy-index 0)) "high" #("weiss-tes" 0 9 (ivy-index 0)) "n" #("1522" 0 4 (ivy-index 0)) #("current-prefix-arg" 0 18 (ivy-index 2)) "arg" "let\\*" "edit" "scan" #("save" 0 4 (ivy-index 3)) #("weiss-dired-toggle-read-only" 0 28 (ivy-index 0)) "rain" "bind-k" "dimi" "stra" "init" "all-the-icons-icon-for-dir" #("ico" 0 3 (ivy-index 0)) #("icon" 0 4 (ivy-index 1)) #("tmt" 0 3 (ivy-index 0)) #("org-functions" 0 13 (ivy-index 2)) #("swit" 0 4 (ivy-index 0)) "print" "trigger_focus_event" "trigger_focus_event" "trigger" "click" #("copy" 0 4 (ivy-index 2)) #("gsd" 0 3 (ivy-index 0)) "scrree" "emacs_var_dict" "jump_to_page" "weiss_jump_to_page" "jump_to_page" "we" #("weiss_jump_to_page" 0 18 (ivy-index 1)) "jump_to_page" #("jump to pag" 0 11 (ivy-index 2)) #("NOTER_PAGE" 0 10 (ivy-index 0)) "org-entry-put" "org-entry-putselection" #("org-element-property" 0 20 (ivy-index 54)) "defun org-noter-insert-note-no-questions" "f" " " #("org-noter--parse-root" 0 21 (ivy-index 1)) "ast" "n" #("cook" 0 4 (ivy-index 0)) #("fish" 0 4 (ivy-index 0)) "女" "女" "snail" #("let" 0 3 (ivy-index 25)) #("use" 0 3 (ivy-index 3)) "defer" #("load-pa" 0 7 (ivy-index 5)) #("trans" 0 5 (ivy-index 1)) #("eaf-translate-text" 0 18 (ivy-index 0)) "d" #("tips" 0 4 (ivy-index 15)) #("snails-init-face-with-theme" 0 27 (ivy-index 2)) #("font-" 0 5 (ivy-index 0)) #("fg" 0 2 (ivy-index 8)) #("383a42" 0 6 (ivy-index 0)) "candi" "candiate-do" "candiate-dosnails-backend-projectile" #("w-key" 0 5 (ivy-index 0)) "weiss-eaf-insert-single-lines" #("input_text" 0 10 (ivy-index 4)) #("back" 0 4 (ivy-index 0)) "get_selection_text" "DOCSTRING" "wt" "open link" "M-d" "open link" "jump_to_link_background_buffer" "jump_to_link_new_buffer" "else" "open link" "open" #("jum" 0 3 (ivy-index 3)) "buffer_widget" "n" "weiss-open_link_new_buffer-without-enter" "==" "get_link_markers" #("get_link_markers" 0 16 (ivy-index 0)) "eaf-browser-remember-historyopen_link_new_buffer" #("emacs_var_dict" 0 14 (ivy-index 22)) "we" #("open_link" 0 9 (ivy-index 0)) #("copy_text" 0 9 (ivy-index 1)) "send_input_message" "Open Link" "Open Link" "Open" "Open" "Open Link" "Open Link" "h" "send_input_message" "send_input_message" "Open Link" "O" "287" "FC2PPV-1224191fertig" #("should" 0 6 (ivy-index 6)) #("rime--ascii-mode-p" 0 18 (ivy-index 1)) "456" "红" #("3:" 0 2 (ivy-index 0)) "class=" "id . mu" "ssni" "rime--inline-ascii" "commit-text-preview" #("rime--should-inline-ascii-p" 0 27 (ivy-index 1)) "rime--inline-ascii" #("rime--return" 0 12 (ivy-index 1)) "rime--returnefun rime--return ()" "RET" "rime-predicate-punctuation-line-begin-p" "https://offcloud.com/api/cloud?key=0YcSeDFYA3DnnU5lu4zjC2JM2bpk7R7I" "list-mat" "123" "123" #("933aa" 0 5 (ivy-index 0)) #("row visi" 0 8 (ivy-index 0)) #("xt=urn:btih:933AA9B3582B4721C6D7F05ABE0C7670CC27DE66&amp" 0 56 (ivy-index 0)) "ö" "eing" "inpu" #("SSNI-733" 0 8 (ivy-index 6)) "+END_SRC" #("get_u" 0 5 (ivy-index 1)) "window" "get_selection_text" "get_selection_text" "get_selection_text" #("get_selection_text_js" 0 21 (ivy-index 1)) "n" #("weiss_get_html_js" 0 17 (ivy-index 1)) "web_page" "triggerPageAction" "copy_select" #("cop" 0 3 (ivy-index 5)) "cl-defmacro" #("dired-filter-define" 0 19 (ivy-index 1)) "dolist" #("xah-fly-v-keymap" 0 16 (ivy-index 0)) "网爆门台湾SWAG元旦节内射中出极品女神" "FC2-PPV-1035938fertifertifertig" #("ca" 0 2 (ivy-index 12)) #("qualifier" 0 9 (ivy-index 22)) #("stgit" 0 5 (ivy-index 0)) "js-video-player" #("video" 0 5 (ivy-index 0)) "if video-name-with-path" "eaf-video-extension-list" "c" #("mp4" 0 3 (ivy-index 0)) #("dired" 0 5 (ivy-index 0)) "445" "745" #("eaf-open" 0 8 (ivy-index 41)) "dired-file-name-at-point" " hc " "close_buffer" #("close_buff" 0 10 (ivy-index 2)) "c" "other-window" #("preview--kill-all-video-buffer" 0 30 (ivy-index 2)) "current-video-name" #("toggle" 0 6 (ivy-index 6)) "restore_seek_position" "/run/media/weiss/Seagate_Backup/porn/020516_239-1pon-1080pfertig" #("nil" 0 3 (ivy-index 131)) "mode" "view_source" "view_source   (\"v\" . \"insert_or_view_source\")" #("sour" 0 4 (ivy-index 0)) "miae2" "1.04" "1.04" "130" "Escortes" "pred-133" #("w-ke" 0 4 (ivy-index 0)) "javl" "head" "C-v" #("C-" 0 2 (ivy-index 0)) #("hack" 0 4 (ivy-index 0)) "N" #("regex" 0 5 (ivy-index 25)) #("abb" 0 3 (ivy-index 0)) #("sub" 0 3 (ivy-index 0)) "minor" #("grou" 0 4 (ivy-index 0)) #("visual-line-mode" 0 16 (ivy-index 0)) #("ii" 0 2 (ivy-index 0)) #("iim" 0 3 (ivy-index 0)) #("hi" 0 2 (ivy-index 9)) #("outlin" 0 6 (ivy-index 0)) "atl" "atl" #("org" 0 3 (ivy-index 10)) "eaf--monitor-configuration-p" #("backg" 0 5 (ivy-index 6)) "open_link_new_buffer" #("new_buffer" 0 10 (ivy-index 2)) "jump_link_new_buffer" #("comma-" 0 6 (ivy-index 0)) "replace-regexp-in-string" "c" #("dired-video-preview" 0 19 (ivy-index 0)) #("rece" 0 4 (ivy-index 0)) ":hook" #("weiss-save-current-content" 0 26 (ivy-index 0)) "eafbufferp" #("rime--after-alphabet-char-p" 0 27 (ivy-index 1)) "translation" "abbre" ":" "lp" "load-path" "use-pa" #("inlin" 0 5 (ivy-index 0)) "楓カレン-rw-r--r--  1 weiss  4,8G 10. Dez 07:07 【明望萌衣、楓カレン】单体作品|自慰|第一人称摄影|蓝光|戏剧|数位马赛克|白天出轨 |GruppenSex|ipx-414fertig.mp4" #("eq" 0 2 (ivy-index 4)) #("hydra-dired-quick-sort/body" 0 27 (ivy-index 1)) "define-de" #("mode" 0 4 (ivy-index 5)) #("mute" 0 4 (ivy-index 5)) "forward" "provide" #("provide" 0 7 (ivy-index 0)) #("up" 0 2 (ivy-index 6)) "atl" "use-pack" #("add" 0 3 (ivy-index 5)) #("add-to" 0 6 (ivy-index 0)) "toggle_fullscreen" "togg" "toggle_fullscreen" "eaf" "toggle_fullscreen" #("toggle_fullscreen" 0 17 (ivy-index 0)) "toggle_play" "toggle_play" #("forward" 0 7 (ivy-index 5)) #("entry-name" 0 10 (ivy-index 3)) #("peep-dired-dir-buffer" 0 21 (ivy-index 0)) "col" "oder" "<s" "or" "<s" #("expand" 0 6 (ivy-index 40)) "i" #("goto_ma" 0 7 (ivy-index 3)) "buffer_widget" "buffer_widget" "buffer_widget" "buffer_widget" "get_focus_text" "get_focus_text" "get_focus_text" "execute_js" "eaf-proxy-eval_js" "eval_js" #("load-" 0 5 (ivy-index 1)) #("xah-fly-insert-state-q" 0 22 (ivy-index 3)) "\"bf\"" #("buffer-name" 0 11 (ivy-index 0)) "all-the-icons-mode-icon-alist" #("all" 0 3 (ivy-index 1)) #("kn" 0 2 (ivy-index 0)) "new" #("正则" 0 2 (ivy-index 6)) "N" "link" "link" "级" #("digit" 0 5 (ivy-index 1)) #("d-ke" 0 4 (ivy-index 0)) #("switch-b" 0 8 (ivy-index 1)) #("cond" 0 4 (ivy-index 0)) "asc" "ch" #("f12" 0 3 (ivy-index 0)) "fcitx" "c-" "c-" #("buffer-n" 0 8 (ivy-index 1)) #("sha" 0 3 (ivy-index 0)) #("ibu" 0 3 (ivy-index 0)) #("js" 0 2 (ivy-index 0)) "sdc" "dic" "eaf" #("open-li" 0 7 (ivy-index 1)) "read-s" #("mplayer" 0 7 (ivy-index 5)) #("org-agenda-done" 0 15 (ivy-index 1)) #("define-ke" 0 9 (ivy-index 0)) #("ken" 0 3 (ivy-index 0)) "snails-backend-buffer-blacklist" #("list" 0 4 (ivy-index 9)) #("couns" 0 5 (ivy-index 2)) "def" "defvar" "defvar" "defvar" #("snails" 0 6 (ivy-index 5)) "define-key" "pas" " y " "sym" #("C-s" 0 3 (ivy-index 2)) #("bind" 0 4 (ivy-index 0)) "bin" #("l" 0 1 (ivy-index 97)) "w3mimgdisplay" #("w3" 0 2 (ivy-index 0)) "egg" #("evd" 0 3 (ivy-index 0)) #("thun" 0 4 (ivy-index 0)) #("plasma-wor" 0 10 (ivy-index 0)) "kde" #("ibus" 0 4 (ivy-index 0)) #("rege" 0 4 (ivy-index 0)) #("limit" 0 5 (ivy-index 4)) "***" "fil" "choose" "List" "List." "List." "List." "List." "xvsr" "app" "app" "wine" "tim" "p" "pass" "\"z\"" "iimage" "with-" "err" "ipv" "454" "path" #("server_names_hash_bucket_size" 0 29 (ivy-index 1)) #("name" 0 4 (ivy-index 2)) "192." #("ssh" 0 3 (ivy-index 0)) "service" "PATH=" "unin" #("科学上网" 0 4 (ivy-index 0)) "多P|拘束|单体作品|巨乳|美少女|潮吹|蓝光|薄马赛克|磁盘点播|2010年代后半" "outline-toggle-children" #("prog" 0 4 (ivy-index 1)) "path" "22" #("eww" 0 3 (ivy-index 1)) #("pyqt" 0 4 (ivy-index 0)) #("calc" 0 4 (ivy-index 0)) "01011" #("603" 0 3 (ivy-index 0)) #("abp34" 0 5 (ivy-index 0)) #("xah-fly-i-keymap" 0 16 (ivy-index 0)) #("i-k" 0 3 (ivy-index 1)) "7" "cla" #("cal" 0 3 (ivy-index 3)) #("new-f" 0 5 (ivy-index 0)) "weiss-xfk-j-key" "weiss-xfk-command-mode-init" "weiss--define-keys" #("weiss-xfk-addon-command" 0 23 (ivy-index 0)) "xfk-command-flag" #("delete-char" 0 11 (ivy-index 7)) #("xah-fly-d-keymap" 0 16 (ivy-index 0)) #("xah-fly-dot-keymap" 0 18 (ivy-index 2)) "new-fra" "prog-mode-hook" "find-file" #("find" 0 4 (ivy-index 2)) "0" #("字幕" 0 2 (ivy-index 0)) #("buch" 0 4 (ivy-index 3)) #("rectan" 0 6 (ivy-index 8)) "prefo" #("h6" 0 2 (ivy-index 1)) #("capi" 0 4 (ivy-index 0)) #("锤子" 0 2 (ivy-index 0)) "fsd" #("430" 0 3 (ivy-index 0)) "cloud" "msfh" "雨季来临，飞机延误取消发生时怎样少受点罪？这有一份快速解决指南" #("上网" 0 2 (ivy-index 0)) "vul" "vul" "427" #("recentf" 0 7 (ivy-index 4)) "date" "427" #("abp6" 0 4 (ivy-index 0)) "pred07" "mifd" "427" "entsch" #("org-agenda-custom-commands" 0 26 (ivy-index 0)) "mifd" "427" "fsd" #("empha" 0 5 (ivy-index 0)) #("fs" 0 2 (ivy-index 0)) "**" "L" "L" #("beisp" 0 5 (ivy-index 2)) #("counsel-fzf" 0 11 (ivy-index 0)) "boo" "fow Org Agenda Clocking face: [sample]" #("fra" 0 3 (ivy-index 0)) #("chrom" 0 5 (ivy-index 2)) "pred" #("无码" 0 2 (ivy-index 0)) "ing" "fsh" #("fly" 0 3 (ivy-index 0)) #("fsh" 0 3 (ivy-index 0)) #("1204" 0 4 (ivy-index 0)) #("midd7" 0 5 (ivy-index 0)) "font-lock-keyword-face" #(":frage" 0 6 (ivy-index 0)) "fontl" #("xah-insert-date" 0 15 (ivy-index 1)) #("kmacro-start-macro" 0 18 (ivy-index 0)) #("rev" 0 3 (ivy-index 3)) "dired onl" #("read-on" 0 7 (ivy-index 0)) "weiss_dired" "hnd" "org-" "refresh-xfk" #("weiss-xfk-close-current-buffer-and-refresh-xfk" 0 46 (ivy-index 0)) #("RET" 0 3 (ivy-index 2)) #("org-noter-sync-current-note" 0 27 (ivy-index 1)) #("org-capture-templates" 0 21 (ivy-index 1)) "tab" #("xfk" 0 3 (ivy-index 0)) "%PDF-1" "%PDF-1" #("cdr" 0 3 (ivy-index 0)) #("misc-info" 0 9 (ivy-index 9)) "xah-fly-insert-mode-activate-newline" #("open-line" 0 9 (ivy-index 1)) "weiss-xfk-k-key" "pdf-view-previous-page-command " #("\"[\"" 0 3 (ivy-index 12)) #("start" 0 5 (ivy-index 0)) #("line" 0 4 (ivy-index 1)) #("lang" 0 4 (ivy-index 0)) #("time" 0 4 (ivy-index 1)) #("org-indent" 0 10 (ivy-index 0)) #("rectangle" 0 9 (ivy-index 6)) "error" "after-init" "recentf-mode" #("fuz" 0 3 (ivy-index 1)) ":init" "bookm" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "bind-key" "<S-return>" "<S-return>" "<S-return>" "<S-return>" "<S-return>" "<S-return>" #("s-re" 0 4 (ivy-index 0)) "regexhelp" #("reg" 0 3 (ivy-index 21)) "df" #("executable-find" 0 15 (ivy-index 0)) "my-swip" "my-swip" "my-swip"))
(setq counsel-M-x-history '(#("weiss-add-enu" 0 13 (ivy-index 0)) #("org-change" 0 10 (ivy-index 1)) #("org-edit master" 0 15 (ivy-index 0)) #("customize va" 0 12 (ivy-index 0)) #("preview-cl" 0 10 (ivy-index 2)) #("yasn vis" 0 8 (ivy-index 0)) #("preview-at-" 0 11 (ivy-index 1)) #("org-preview" 0 11 (ivy-index 1)) #("preview-buf" 0 11 (ivy-index 0)) #("weiss-org-preview-latex-and-image" 0 33 (ivy-index 0)) #("xah-elisp" 0 9 (ivy-index 0)) #("describe-func" 0 13 (ivy-index 1)) #("magic latex" 0 11 (ivy-index 0)) #("yas visi" 0 8 (ivy-index 0)) #("org-edit-latex" 0 14 (ivy-index 4)) #("org-edt-late" 0 12 (ivy-index 0)) #("o" 0 1 (ivy-index 2)) #("org-edit-late" 0 13 (ivy-index 1)) #("org-edit-latex-preview-at-point" 0 31 (ivy-index 0)) #("megha ty" 0 8 (ivy-index 0)) #("megha ref" 0 9 (ivy-index 1)) #("dired marked" 0 12 (ivy-index 6)) #("meghanada im" 0 12 (ivy-index 0)) #("flychec" 0 7 (ivy-index 0)) #("nox-fo" 0 6 (ivy-index 0)) #("org-cdl" 0 7 (ivy-index 1)) #("snippet vis" 0 11 (ivy-index 0)) #("yasnippet" 0 9 (ivy-index 15)) #("snippet" 0 7 (ivy-index 1)) #("cdla" 0 4 (ivy-index 2)) #("count-di" 0 8 (ivy-index 0)) #("nox" 0 3 (ivy-index 1)) #("nox-sho" 0 7 (ivy-index 0)) #("bookmark dele" 0 13 (ivy-index 0)) #("nox-show-doc" 0 12 (ivy-index 0)) #("emoji" 0 5 (ivy-index 0)) #("package" 0 7 (ivy-index 0)) #("org cdla" 0 8 (ivy-index 0)) #("emojify ins" 0 11 (ivy-index 0)) #("emo" 0 3 (ivy-index 0)) #("emoj" 0 4 (ivy-index 0)) #("xah elis" 0 8 (ivy-index 0)) #("cu" 0 2 (ivy-index 0)) #("cus face" 0 8 (ivy-index 1)) #("rainbow" 0 7 (ivy-index 0)) #("emojify inser" 0 13 (ivy-index 0)) #("python" 0 6 (ivy-index 2)) #("magic-la" 0 8 (ivy-index 0)) #("cus" 0 3 (ivy-index 0)) #("cdlatex" 0 7 (ivy-index 3)) #("org export" 0 10 (ivy-index 1)) #("export" 0 6 (ivy-index 4)) #("cust" 0 4 (ivy-index 0)) #("rain" 0 4 (ivy-index 0)) #("org-edit-sp" 0 11 (ivy-index 0)) #("list-pac" 0 8 (ivy-index 0)) #("packa" 0 5 (ivy-index 3)) #("cdlatex-" 0 8 (ivy-index 6)) #("xwidget-" 0 8 (ivy-index 4)) #("weiss previ" 0 11 (ivy-index 0)) #("webkit" 0 6 (ivy-index 5)) #("pdf-" 0 4 (ivy-index 0)) #("we" 0 2 (ivy-index 0)) #("x" 0 1 (ivy-index 0)) #("dired-f" 0 7 (ivy-index 0)) #("toggle" 0 6 (ivy-index 0)) #("xah" 0 3 (ivy-index 0)) #("custome" 0 7 (ivy-index 1)) #("doom-mode" 0 9 (ivy-index 0)) #("dired-do-rename" 0 15 (ivy-index 0)) #("key freq" 0 8 (ivy-index 0)) #("emojify insert" 0 14 (ivy-index 0)) #("pdf-too" 0 7 (ivy-index 1)) #("dired-do-co" 0 11 (ivy-index 0)) #("gen" 0 3 (ivy-index 1)) #("eaf" 0 3 (ivy-index 0)) #("eaf ge" 0 6 (ivy-index 0)) #("togg" 0 4 (ivy-index 0)) #("sn" 0 2 (ivy-index 1)) #("find libr" 0 9 (ivy-index 0)) #("eaf gen" 0 7 (ivy-index 1)) #("toggle b" 0 8 (ivy-index 0)) #("dired" 0 5 (ivy-index 0)) #("s" 0 1 (ivy-index 0)) #("sna" 0 3 (ivy-index 0)) #("sudo-edi" 0 8 (ivy-index 0)) #("snails" 0 6 (ivy-index 0)) #("weiss-du" 0 8 (ivy-index 0)) #("counsel-tramp" 0 13 (ivy-index 0)) #("luna" 0 4 (ivy-index 0)) #("e" 0 1 (ivy-index 0)) #("eaf-toggle" 0 10 (ivy-index 0)) #("weiss arch" 0 10 (ivy-index 0)) #("snail" 0 5 (ivy-index 0)) #("bookmarks ed" 0 12 (ivy-index 0)) #("all-the" 0 7 (ivy-index 0)) #("customize them" 0 14 (ivy-index 0)) #("diff" 0 4 (ivy-index 2)) #("bookmark" 0 8 (ivy-index 0))))
(setq shell-command-history '("xset r rate 230 30" "todo.org" "xset r rate 230 30" "todo.org" "xset r rate 230 30" "python getAvInfo.py" "ls"))
(setq query-replace-history '("- " "**** " "totalo" "char-after" "char-before" "char-after" "char-before" "before-char" "(char-before)" "" "$" "\\subset" "\\in" "most()" "most" "{log(n)}" "i" "\\leq" "=" "0,5" "0.5" "d" "d_1" ":straight  :quelpa" ":straight  :quelpa " ":straight  :ensure " ":straight :ensure" ":straight :ensure" ":straight :ensure" ":straight  :ensure " ":straight  :ensure" ":straight  :ensure " ":ensure" ":straight " "straight" "avlist" "current-buffer" "avlist" "rg" "avlist" "rg" ")" "$" "" "\"))" "" ".el" "" "insert_or_" "" "." "" "|" "SCHEDULED" "closed" "TODO" "done" "2020-04" "2019-10" "妓女" "stocking" "stocking" "uncensored" "positiv" "stocking" "*\\1*" "\\(^\\w+[ a-z]*:\\)" "uncensored" "sm" "sm" "发射" "\"\\([[:word:]]+\\)\" \"\"" "\\1" "\"\\([[:word:]]+\\)\"" ". *" "$" "." "'" ";" "(dired-file-name-at-point)" "(file-name-nondirectory (dired-file-name-at-point))" "(dired-file-name-at-point) (file-name-nondirectory (dired-file-name-at-point))" "(file-name-nondirectory (dired-file-name-at-point))" "dired-file-name-at-point" "dired-file-name-at-point" "abc" "\\" "^\\(.*(use-package .*\\)$ \\1 
:diminish" "^\\(.*(use-package .*\\)$ \\1 
:diminish" "\\1 
:diminish" "^\\((use-package .*\\)$" "^\\((use-package .*\\)$ \\1 
 :diminish" "^\\((use-package .*\\)$ \\1 
 :diminish" "^\\((use-package .*\\)$ \\1 \\n :diminish" "^\\((use-package .*\\)$ \\1 \\n :diminish" "^\\((use-package .*\\)$ \\1 
 :diminish" "\\1 \\n :diminish" "^\\((use-package .*\\)$" "^(use-package \\(.*\\)$" "^.*\\\\(.\\\\{8\\\\}\\\\)\\\\(fertig\\\\)\\\\{0,1\\\\}.\\\\{2,4\\\\}$"))
(setq magit-revision-history '(#("develop" 0 7 (ivy-index 0)) "git@github.com:WeissP/.emacs.d.git"))
(setq search-ring '(#("ausna" 0 5 (isearch-regexp-function nil isearch-case-fold-search t)) #("wor" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("wors" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("schleif" 0 7 (isearch-regexp-function nil isearch-case-fold-search t)) #("funktionen" 0 10 (isearch-regexp-function nil isearch-case-fold-search t)) #("sieb" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("score" 0 5 (isearch-regexp-function nil isearch-case-fold-search t)) #("insert-hea" 0 10 (isearch-case-fold-search t isearch-regexp-function nil)) #("hyd" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) "excep" "ssh" "pean" "leibniz" "leib" "leb" "pea"))
(setq yes-or-no-p-history '("yes"))
(setq file-name-history '(#("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/6/text.pdf" 0 71 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/6/text.tex" 0 71 (ivy-index 1)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/Übungen/6/algo6-abgabe.tex" 0 68 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/Übungen/6/Algo6-blatt6.pdf" 0 68 (ivy-index 2)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/Übungen/6/algo6-abgabe.pdf" 0 68 (ivy-index 2)) #("/home/weiss/Documents/Vorlesungen/FSuB/Übungen/6/FSuB4a-Abgabe.pdf" 0 66 (ivy-index 1)) #("/home/weiss/Documents/Vorlesungen/FSuB/Übungen/6/FSuB4a-Abgabe.org" 0 66 (ivy-index 1)) #("/home/weiss/Documents/Vorlesungen/FSuB/Übungen/6/fsub_4a.pdf" 0 60 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/5/Insy-sheet05.tex" 0 79 (ivy-index 2)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/5/Insy5-Abgabe.pdf" 0 79 (ivy-index 1)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/5/Insy5-Abgabe.org" 0 79 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/5/" 0 63 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/5" 0 62 (ivy-index 0)) #("/run/media/weiss/Seagate_Backup/porn/" 0 37 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Programmierpraktikum/" 0 55 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Programmierpraktikum/Übungen/" 0 63 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/FSuB/Übungen/4/FSuB-Abgabe-Blatt3b.pdf" 0 72 (ivy-index 1)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/Übungen/4/AlgoDat-Abgabe-Blatt4.tex" 0 77 (ivy-index 2)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/Übungen/4/AlgoDat-Abgabe-Blatt4.pdf" 0 77 (ivy-index 1)) #("/home/weiss/Documents/Vorlesungen/Programmierpraktikum/Übungen/team19/MP1/src/main/java/de/tukl/programmierpraktikum2020/mp1/TreeMap.java" 0 137 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Programmierpraktikum/Übungen/team19/MP1/src/main/java/de/tukl/programmierpraktikum2020/mp1/ArrayMap.java" 0 138 (ivy-index 0)) #("/home/weiss/.emacs.d/local-package/meow/meow-keybind.el" 0 55 (ivy-index 14)) "/home/weiss/Documents/Vorlesungen/FSuB/Thema3/3.7 Pumping Lemma fur regulare Sprachen.pdf" "/home/weiss/Documents/Vorlesungen/FSuB/Thema3/3.6 Minimierung von DEAs.pdf" #("/home/weiss/Documents/Vorlesungen/FSuB/Thema3/" 0 46 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/FSuB/Thema3" 0 45 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/Übungen/3/AlgoDat-ShareLatex-Blatt3.tex" 0 81 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/Übungen/3/AlgoDat-Abgabe-Blatt3.tex" 0 77 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/Übungen/3/AlgoDat-Abgabe-Blatt3.pdf" 0 77 (ivy-index 2)) #("/home/weiss/Python/dice.py" 0 26 (ivy-index 3)) #("/home/weiss/Python/cal.py" 0 25 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/Übungen/3/AlgoDat-blatt3.pdf" 0 70 (ivy-index 1)) #("/home/weiss/Downloads/" 0 22 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/4/Insy-Abgabe-Sheet04.pdf" 0 86 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/4/Insy-Abgabe-Sheet04.tex" 0 86 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/4/Insy-sheet04.tex" 0 79 (ivy-index 1)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/4/Insy-Abgabe-Sheet04.org" 0 86 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/MFI-KSS/Übungen/" 0 50 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/Übungen/2/blatt2-AlgoDat.pdf" 0 70 (ivy-index 2)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/1/sheet01.pdf" 0 74 (ivy-index 2)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/1/Abgabe-sheet01-Insy.pdf" 0 86 (ivy-index 1)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/1/Abgabe_1.pdf" 0 75 (ivy-index 2)) "/home/weiss/Documents/Org/Bilder/从 0 开始学习 GitHub 系列.pdf" "/home/weiss/Documents/Vorlesungen/MFI-KSS/Übungen/blatt2-KSS.pdf" #("/home/weiss/Downloads/rsync-test/" 0 33 (ivy-index 0)) #("/run/media/weiss/Seagate_Backup/" 0 32 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/FSuB/Übungen/2/FSuB-blatt2.tex" 0 64 (ivy-index 2)) #("/home/weiss/Documents/Vorlesungen/FSuB/Übungen/2/Abgabe-blatt2-FSuB.tex" 0 71 (ivy-index 1)) #("/home/weiss/Documents/Vorlesungen/FSuB/Übungen/2/_region_.tex" 0 61 (ivy-index 1)) #("/home/weiss/Documents/Vorlesungen/FSuB/Übungen/3/FSuB-Abgabe-Blatt3.tex" 0 71 (ivy-index 3)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/Übungen/2/_region_.tex" 0 64 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/3/Beschreibung.org" 0 79 (ivy-index 0)) #("/home/weiss/Downloads/asdf.org" 0 30 (ivy-index 0)) #("/home/weiss/Downloads/test.org" 0 30 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/FSuB/Übungen/3/test.org" 0 57 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/AlgoDat-V06.pdf" 0 57 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/" 0 42 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Programmierpraktikum/Übungen/2/Shapes/Shapes/src/Square.java" 0 94 (ivy-index 0)) #("/home/weiss/.emacs.d/config/weiss_latex.el" 0 42 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/AlgoDat/Übungen/2/Abgabe-Blatt02-AlgoDat.pdf" 0 78 (ivy-index 2)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/2/" 0 63 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/2/apriori.py" 0 73 (ivy-index 1)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/2/abgabe-sheet02-Insy.org" 0 86 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/2/sheet02.pdf" 0 74 (ivy-index 5)) #("/home/weiss/Documents/Vorlesungen/Programmierpraktikum/Übungen/2/Shapes/Shapes/src/Rectangle.java" 0 97 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Programmierpraktikum/Übungen/2/Shapes/Shapes/src/Union-Bonus.java" 0 99 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Programmierpraktikum/Übungen/2/Shapes/Shapes/src/Smiley.java" 0 94 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Programmierpraktikum/Übungen/2/Shapes/Shapes/src/Move.java" 0 92 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Programmierpraktikum/Übungen/2/Shapes/Shapes/src/Union.java" 0 93 (ivy-index 0)) "/home/weiss/Documents/Vorlesungen/Programmierpraktikum/Übungen/2/pp-uebung2.pdf" #("/home/weiss/Documents/Vorlesungen/AlgoDat/Übungen/TCS+Cheatsheet.pdf" 0 68 (ivy-index 4)) #("/home/weiss/.emacs.d/.cache/lsp/eclipse.jdt.ls/" 0 47 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/FSuB/Übungen/abgabe-blatt01-FSuB.pdf" 0 70 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/FSuB/Übungen/blatt1.pdf" 0 57 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/FSuB/Übungen/abgabe-blatt01-FSuB.org" 0 70 (ivy-index 0)) #("/home/weiss/.emacs.d/local-package/ob-R.el" 0 42 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/1/Abgabe-sheet01.pdf" 0 81 (ivy-index 1)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/1/Abgabe-sheet01.org" 0 81 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/Informationssystem/Übungen/1/sheet01.tex" 0 74 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/MFI-KSS/" 0 42 (ivy-index 0)) #("/home/weiss/Documents/Vorlesungen/MFI-KSS/Übungen" 0 49 (ivy-index 0)) #("/home/weiss/.emacs.d/init.el" 0 28 (ivy-index 0)) #("/home/weiss/weiss/IcsToOrg/" 0 27 (ivy-index 0)) #("/home/weiss/weiss/IcsToOrg" 0 26 (ivy-index 0)) #("/home/weiss/weiss/ical2org" 0 26 (ivy-index 0)) #("/home/weiss/Documents/Org/calendar.org" 0 38 (ivy-index 0)) #("/home/weiss/weiss/ical2org.sh" 0 29 (ivy-index 0)) #("/home/weiss/weiss/" 0 18 (ivy-index 0)) #("/home/weiss/Downloads/calendar.org" 0 34 (ivy-index 0)) #("/home/weiss/Documents/Org/test.org" 0 34 (ivy-index 0)) #("/home/weiss/.emacs.d/config/weiss_pdf_tools.el" 0 46 (ivy-index 1)) #("/home/weiss/.stardict/dic/" 0 26 (ivy-index 0)) #("/home/weiss/.emacs.d/config/weiss-dired-video-preview-mode.el" 0 61 (ivy-index 0)) "/sudo:root@weiss-tablet:" #("/sudo:root@weiss-tablet:/" 0 25 (ivy-index 0)) #("/home/weiss/.nutstore/db/" 0 25 (ivy-index 0)) #("/home/weiss/.emacs.d/config/weiss_ui_ori.el" 0 43 (ivy-index 4)) #("/home/weiss/.emacs.d/config/weiss_ui_before_dump.el" 0 51 (ivy-index 0)) #("/home/weiss/.emacs.d/config/weiss_ui_after_dump.el" 0 50 (ivy-index 0))))
(setq buffer-name-history '("weiss_company.el" "weiss_keybinding.el" "xah-fly-keys.el" "weiss_keybinding.el" "bin" "weiss_keybinding.el" "weiss_ui.el" "weiss_edit.el" "weiss_init.el" "xah-fly-keys.el" "weiss_dired.el" "xah-fly-keys.el" "weiss_ui.el" "ui" "weiss_init.el" "weiss_dired.el" ".emacs.d" "weiss_keybinding.el" "weiss_init.el"))
(setq minibuffer-history '("fehler" "pfirsch" "nervt" "array" "prestige" "kleene" "rabatt" "Übung" "hook" "amotiesieren" "allokation" "abzeichnen" "iterable" "R-cal.r" "zweige" "erheben" "verbringen" "versandhaus" "versand" "katalog" "stationäre" "Found 1 items, similar to gadfly.
" "ergodisch" "ab" "beweisen" "deswegen" "link" "regel" "Corollar" "fiktion" "reden" "女佣" "女" "女仆" "a" "infektiös" "asymptomatisch" "korpus" "satzzeichen" "approximieren" "polysemie" "latent" "marginal" "vorlesung" "rectum" "procedure" "parasitic" "pinworm" "weiss_latex.el" "Online Vorlesung - Chat Room" "https://teamwork.rarp-kl.de/mfi-kss/channels/off-topic" "DFNconf: Stream - Video Vorlesung" "https://www.conf.dfn.de/stream/nr573yjyq4dgc/" "lena" "untergehen" "vary" "mileage" "q" "Online Vorlesung" "https://teamwork.rarp-kl.de/mfi-kss/channels/off-topic" "Digitale Vorlesung" "map" "hook" "test.org" "notiz" "notizen" "schonmal" "denken" "sowieso" "ausschließen" "Hürde" "werden" "schonmal" "code" "computer" "tests" "德语" "germany" "left" "tests" "cann't" "word" "list" "push" "append" "cons" " r" "0" "1" "formart" "tests" "asdfsdfsd" "char" "颜射" "current" "unless" "when" "defvar" "setq" "start-po"))
(setq extended-command-history '("org-latex-preview" "recentf-open-files" "eval-buffer" "recentf-open-files" "eval-buffer" "recentf-open-files" "bookmark-jump" "recentf-open-files" "find-file" "weiss-test" "recentf-open-files" "list-buffers" "recentf-open-files" "kill-buffer" "electric-pair-mode" "kill-buffer" "electric-pair-mode" "kill-buffer" "recentf-open-files" "bookmark-bmenu-select" "xah-open-file-fast" "snails" "org-babel-tangle" "snails" "org-babel-tangle" "snails" "python-mode" "company-mode" "eval-region" "weiss-indent" "find-file" "magit" "indent-region" "comment-dwim" "describe-font" "comment-dwim" "eval-region" "all-the-icons-install-fonts" "eval-region" "revert-buffer" "eval-region" "weiss-xfk-addon-command"))
(setq tablist-named-filter 'nil)
(setq dired-quick-sort-time-last '"ctime")
(setq dired-quick-sort-group-directories-last '110)
(setq dired-quick-sort-reverse-last '110)
(setq dired-quick-sort-sort-by-last '"time")
