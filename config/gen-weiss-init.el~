;; -*- lexical-binding: t -*-
;; init for dump

;; [[file:~/.emacs.d/config/emacs-config.org::*init for dump][init for dump:1]]
(defvar user/launch-time (current-time))
(defvar weiss-config-path "/home/weiss/.emacs.d/config/")
(defun weiss--get-config-file-path (path)
  "get config path according to weiss-config-path"
  (interactive)
  (concat weiss-config-path path)
  )
;;; code:
(require 'cl-lib)
(require 'debus)

(defvar weiss-dumped-load-path nil)
(if weiss-dumped-load-path
    (progn
      (setq load-path weiss-dumped-load-path)
      ;; Some shim code for tramp
      (defun tramp-file-name-method--cmacro (&rest args))
      (require 'tramp)
      (setq tramp-mode 1)
      (global-font-lock-mode t)
      (transient-mark-mode t)
      )
  (load (weiss--get-config-file-path "gen-weiss-really-init.el"))
  (use-package emacs-yakuake
    :load-path "/home/weiss/.emacs.d/local-package/dropdown-remote/"
    :ensure nil)
  (require 'ryo-modal)
  (require 'gen-weiss-functions)
  (require 'gen-weiss-edit)
  (require 'gen-weiss-completion)
  ;; (require 'gen-weiss-lang)
  (require 'gen-weiss-ivy)
  ;; (require 'gen-weiss-vcs)
  ;; (require 'gen-weiss-shell-or-terminal)
  (require 'gen-weiss-dired)
  (require 'gen-weiss-org)
  ;; (require 'gen-weiss-pdf)
  ;; (require 'gen-weiss-flycheck)
  ;; (require 'gen-weiss-translation)
  (require 'gen-weiss-snails)
  ;; (require 'gen-weiss-sql)
  ;; (require 'gen-weiss-rime)
  ;; (require 'gen-weiss-telega)
  (require 'weiss-abbrev-mode)
  ;; (require 'gen-weiss-project)
  ;; (require 'gen-weiss-lsp)
  (require 'gen-weiss-ui)
  (require 'gen-weiss-keybinding) 
  )

(load (weiss--get-config-file-path "gen-weiss-after-dump.el"))

(message "Emacs is ready, startup cost: %.3f seconds." (time-to-seconds (time-since user/launch-time)))
(setq user/launch-time nil)
;; init for dump:1 ends here
