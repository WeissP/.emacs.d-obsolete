(with-eval-after-load 'yasdcv
  (defun yasdcv--wash-duden ()
    "Wash Duden output"
    (interactive)
    (goto-char (point-min))
    (while (re-search-forward "\\*" nil t)
      (replace-match "！"))

    (goto-char (point-min))
    (while (re-search-forward " \\([a-z])\\) " nil t)
      (replace-match " \n**** \\1 "))
    
    (goto-char (point-min))
    (re-search-forward ":" nil t)
    (while (re-search-forward " \\([0-9]\\.\\) " nil t)
      (replace-match " \n*** \\1 "))

    (goto-char (point-min))
    (while (re-search-forward " \\(I+\\.\\) " nil t)
      (replace-match " \n** \\1 "))

    (goto-char (point-min))
    ;; (re-search-forward "\\-\\->Duden\n\\-\\->.+?\n")
    ;; (forward-char 15)
                                        ; skip the first similicon
    (re-search-forward ":" nil t)
    (while (re-search-forward "; " nil t)
      (replace-match ";\n"))

    (goto-char (point-min))
    (while (re-search-forward "-->\\(.*\\)\n-->\\(.*\\)\n*\\(d[eai][rse]\\);" nil t) ; show der/das/die an the title
      (replace-match "* \\1 (\\2) [\\3]\n\\3;"))
    )

  (defun yasdcv--wash-PONS-eng-de ()
    "DOCSTRING"
    (interactive)
    (let ((html (buffer-substring (point-min) (point-max)))
          pb
          (pe (line-end-position))
          )
      (goto-char (point-min))
      (next-line 3)
      (setq pb (line-beginning-position))    
      (write-region pb pe "~/.emacs.d/temp/yasdcv-PONS-eng-de.html")
      (delete-region pb pe)
      (insert (shell-command-to-string (format "python3 -W ignore %s %s  --ignore-links --ignore-images -b 0" "/home/weiss/Python/html2text/html2text.py" "/home/weiss/.emacs.d/temp/yasdcv-PONS-eng-de.html")))    
      (yasdcv-help--wash-PONS)
      ))

  (defun yasdcv-help--wash-PONS ()
    "DOCSTRING"
    (interactive)
    (goto-char (point-min))
    (while (re-search-forward "\\*\\* \\*\\*" nil t)
      (replace-match ""))
    (goto-char (point-min))
    (while (re-search-forward "\\*\\*" nil t)
      (replace-match "*"))
    (goto-char (point-min))
    (while (re-search-forward ";" nil t)
      (replace-match ";\n"))
    (goto-char (point-min))
    (while (re-search-forward "\\*·\\*" nil t)
      (save-restriction
        (narrow-to-region (line-beginning-position) (line-end-position))
        (goto-char (point-min))
        (while (re-search-forward "*" nil t)
          (replace-match ""))
        )        
      )    
    (goto-char (point-min))
    (while (re-search-forward "^*" nil t)
      (replace-match " *"))
    (goto-char (point-min))
    (while (re-search-forward "^ *\\* \\(I+\\) \\*" nil t)
      (replace-match "** \\1"))
    )

  (defun yasdcv--wash-PONS-de-eng ()
    "DOCSTRING"
    (interactive)
    (let ((html (buffer-substring (point-min) (point-max)))
          pb
          (pe (line-end-position))
          )
      (goto-char (point-min))
      (next-line 3)
      (setq pb (line-beginning-position))    
      (write-region pb pe "~/.emacs.d/temp/yasdcv-PONS-de-eng.html")
      (delete-region pb pe)
      (insert (shell-command-to-string (format "python3 -W ignore %s %s  --ignore-links --ignore-images -b 0" "/home/weiss/Python/html2text/html2text.py" "/home/weiss/.emacs.d/temp/yasdcv-PONS-de-eng.html")))    
      (yasdcv-help--wash-PONS)
      ))

  (defun yasdcv--wash-xindehan ()
    "DOCSTRING"
    (interactive)
    (goto-char (point-min))
    (while (re-search-forward "①" nil t)
      (replace-match " \n**** ① "))
    (goto-char (point-min))
    (while (re-search-forward "②" nil t)
      (replace-match " \n**** ② "))
    (goto-char (point-min))
    (while (re-search-forward "③" nil t)
      (replace-match " \n**** ③ "))
    (goto-char (point-min))
    (while (re-search-forward "④" nil t)
      (replace-match " \n**** ④ "))
    (goto-char (point-min))
    (while (re-search-forward "⑤" nil t)
      (replace-match " \n**** ⑤ "))
    (goto-char (point-min))
    (while (re-search-forward "⑥" nil t)
      (replace-match " \n**** ⑥ "))
    (goto-char (point-min))
    (while (re-search-forward "⑦" nil t)
      (replace-match " \n**** ⑦ "))
    (goto-char (point-min))
    (while (re-search-forward "⑧" nil t)
      (replace-match " \n**** ⑧ "))
    (goto-char (point-min))
    (while (re-search-forward "⑨" nil t)
      (replace-match " \n**** ⑨ "))
    (goto-char (point-min))
    (while (re-search-forward "⑩" nil t)
      (replace-match " \n**** ⑩ "))

    (goto-char (point-min))
    (while (re-search-forward " \\([0-9]\\.\\) " nil t)
      (replace-match " \n*** \\1 "))

    (goto-char (point-min))
    (while (re-search-forward "Ⅰ" nil t)
      (replace-match " \n** I "))

    (goto-char (point-min))
    (while (re-search-forward "Ⅱ" nil t)
      (replace-match " \n** II "))
    )
  )

(provide 'weiss_wash<yasdcv)
